From: Sylvain <sylvain.becker@gmail.com>
Date: Sat, 19 Mar 2022 16:17:23 +0100
Subject: Use 64-bit arithmetic to avoid overflows

Fixed bug #187 - Arbitrary memory overwrite occurs when loading glyphs
and rendering text with a malformed TTF.
Pitch/size isn't calculated with 64 bits precisions

Bug: https://github.com/libsdl-org/SDL_ttf/issues/187
Bug-CVE: https://security-tracker.debian.org/tracker/CVE-2022-27470
Bug-Debian: https://bugs.debian.org/1010671
Origin: upstream, 2.19.0, commit:09a2294338d7907ae955b07affdac229546f9cc9
---
 SDL_ttf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/SDL_ttf.c b/SDL_ttf.c
index 91f1628..bf06b58 100644
--- a/SDL_ttf.c
+++ b/SDL_ttf.c
@@ -1248,7 +1248,7 @@ static SDL_Surface* Create_Surface_Solid(int width, int height, SDL_Color fg, Ui
      */
     void *pixels, *ptr;
     /* Worse case at the end of line pulling 'alignment' extra blank pixels */
-    int pitch = width + alignment;
+    Sint64 pitch = width + alignment;
     pitch += alignment;
     pitch &= ~alignment;
     size = height * pitch + sizeof (void *) + alignment;
@@ -1312,7 +1312,7 @@ static SDL_Surface* Create_Surface_Shaded(int width, int height, SDL_Color fg, S
      */
     void *pixels, *ptr;
     /* Worse case at the end of line pulling 'alignment' extra blank pixels */
-    int pitch = width + alignment;
+    Sint64 pitch = width + alignment;
     pitch += alignment;
     pitch &= ~alignment;
     size = height * pitch + sizeof (void *) + alignment;
@@ -1409,7 +1409,7 @@ static SDL_Surface *Create_Surface_Blended(int width, int height, SDL_Color fg,
         Sint64 size;
         void *pixels, *ptr;
         /* Worse case at the end of line pulling 'alignment' extra blank pixels */
-        int pitch = (width + alignment) * 4;
+        Sint64 pitch = (width + alignment) * 4;
         pitch += alignment;
         pitch &= ~alignment;
         size = height * pitch + sizeof (void *) + alignment;
